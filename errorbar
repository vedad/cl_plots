#!/usr/bin/env python

from __future__ import (print_function, division)

import numpy as np
import matplotlib.pyplot as plt
import argparse

""" 
A script that takes a command-line argument specifying the path to a
multicolumn file that contains at least 3 columns of x, y, yerr, and brings up
the scatter plot with errorbars. In order to run anywhere on your computer, the
path to this file needs to be added to your .bashrc or .bash_profile, e.g. add
the following line to either file:

    export PATH="/path/to/this/file:$PATH"

Then, the script can be called from the terminal with e.g.

    >> errorbar /path/to/my/data.txt

which will bring up a plot of the data with errorbars.
"""

def plot_errorbar(filename):
    try:
        x, y, yerr = np.loadtxt(filename, unpack=True, usecols=(0,1,2))
    # in case of wrong delimiter
    except ValueError: 
        x, y, yerr = np.loadtxt(filename, delimiter=',', unpack=True,
                                usecols=(0,1,2))

    fig, ax = plt.subplots(figsize=(10,7.5))
    ax.errorbar(x, y, yerr=yerr, fmt='none', capsize=0, color='gray', alpha=0.5)
    ax.errorbar(x, y, fmt='.', color='black')

    ax.set_xlabel('$x$')
    ax.set_ylabel('$y$')

    return fig, ax

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="Display timeseries data with errorbars")
    parser.add_argument('filename', type=str,
                        help='the full system path to a file containing tree columns (x, y, y_err) separated by commas or space')

    args = parser.parse_args()

    fig, ax = plot_errorbar(args.filename)
    plt.show()

